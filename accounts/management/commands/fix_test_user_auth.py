from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model

User = get_user_model()


class Command(BaseCommand):
    help = '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç authentication ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö test user'

    def add_arguments(self, parser):
        parser.add_argument(
            '--username',
            type=str,
            default='usertest1',
            help='Username ‡∏Ç‡∏≠‡∏á test user ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç'
        )

    def handle(self, *args, **options):
        username = options['username']
        
        try:
            user = User.objects.get(username=username)
            
            self.stdout.write(f'üîß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç authentication ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö: {username}')
            
            # ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ bypass NPU authentication
            user.ldap_uid = None  # ‡∏•‡∏ö LDAP UID ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ Django authentication
            user.npu_staff_id = None
            user.is_staff = False  # ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà staff
            user.approval_status = 'approved'
            user.is_active = True
            
            # ‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà
            user.set_password('usertest1')
            user.save()
            
            self.stdout.write(f'‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç {username} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!')
            self.stdout.write(f'üîë ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ login ‡∏î‡πâ‡∏ß‡∏¢:')
            self.stdout.write(f'   Username: {username}')
            self.stdout.write(f'   Password: usertest1')
            self.stdout.write('')
            self.stdout.write('üí° ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÉ‡∏ä‡πâ Django authentication ‡πÅ‡∏ó‡∏ô NPU')
            
        except User.DoesNotExist:
            self.stdout.write(f'‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö user: {username}')
            
        except Exception as e:
            self.stdout.write(f'‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}')