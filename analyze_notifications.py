#!/usr/bin/env python
"""
‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ notification types ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
"""
import os
import re

def analyze_file(filepath):
    """‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå"""
    results = {
        'alert': [],
        'confirm': [],
        'modal': [],
        'toast': []
    }

    try:
        with open(filepath, 'r', encoding='utf-8') as f:
            content = f.read()
            lines = content.split('\n')

            for i, line in enumerate(lines, 1):
                # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ alert()
                if 'alert(' in line and not line.strip().startswith('//'):
                    # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô alert
                    match = re.search(r"alert\(['\"](.+?)['\"]\)", line)
                    if match:
                        results['alert'].append((i, match.group(1)))

                # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ confirm()
                if 'confirm(' in line and not line.strip().startswith('//'):
                    match = re.search(r"confirm\(['\"](.+?)['\"]\)", line)
                    if match:
                        results['confirm'].append((i, match.group(1)))

                # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ modal
                if 'new bootstrap.Modal' in line or '.modal(' in line:
                    results['modal'].append((i, line.strip()[:60]))

                # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ toast
                if 'showToast(' in line:
                    results['toast'].append((i, line.strip()[:60]))

    except Exception as e:
        pass

    return results

def main():
    # ‡πÉ‡∏ä‡πâ relative path ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á Windows ‡πÅ‡∏•‡∏∞ Linux
    base_dir = os.path.dirname(os.path.abspath(__file__))
    templates_dir = os.path.join(base_dir, 'templates')

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ templates directory ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á
    if not os.path.exists(templates_dir):
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö directory: {templates_dir}")
        return

    summary = {
        'alert': {},
        'confirm': {},
        'modal': {},
        'toast': {}
    }

    for root, dirs, files in os.walk(templates_dir):
        for file in files:
            if file.endswith('.html'):
                filepath = os.path.join(root, file)
                relative_path = os.path.relpath(filepath, templates_dir)

                results = analyze_file(filepath)

                for notif_type, items in results.items():
                    if items:
                        if relative_path not in summary[notif_type]:
                            summary[notif_type][relative_path] = []
                        summary[notif_type][relative_path].extend(items)

    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    print("="*80)
    print("üìä ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Notification Types")
    print("="*80)
    print()

    # Alert
    print("üîî alert() - JavaScript Alert ‡πÅ‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤")
    print("-"*80)
    if summary['alert']:
        total = sum(len(items) for items in summary['alert'].values())
        print(f"‡∏û‡∏ö {total} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô {len(summary['alert'])} ‡πÑ‡∏ü‡∏•‡πå")
        for file, items in sorted(summary['alert'].items()):
            print(f"\n  üìÑ {file}")
            for line_no, msg in items[:3]:  # ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏Ñ‡πà 3 ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÅ‡∏£‡∏Å
                print(f"     Line {line_no}: {msg[:50]}...")
            if len(items) > 3:
                print(f"     ... ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å {len(items)-3} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
    else:
        print("  ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")

    print("\n")

    # Confirm
    print("‚ùì confirm() - JavaScript Confirm Dialog")
    print("-"*80)
    if summary['confirm']:
        total = sum(len(items) for items in summary['confirm'].values())
        print(f"‡∏û‡∏ö {total} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô {len(summary['confirm'])} ‡πÑ‡∏ü‡∏•‡πå")
        for file, items in sorted(summary['confirm'].items()):
            print(f"\n  üìÑ {file}")
            for line_no, msg in items[:3]:
                print(f"     Line {line_no}: {msg[:50]}...")
    else:
        print("  ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")

    print("\n")

    # Modal
    print("ü™ü Bootstrap Modal")
    print("-"*80)
    if summary['modal']:
        total = sum(len(items) for items in summary['modal'].values())
        print(f"‡∏û‡∏ö {total} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô {len(summary['modal'])} ‡πÑ‡∏ü‡∏•‡πå")
        print(f"  ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ Modal: {', '.join(list(summary['modal'].keys())[:5])}...")
    else:
        print("  ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")

    print("\n")

    # Toast
    print("üçû Toast Notification")
    print("-"*80)
    if summary['toast']:
        total = sum(len(items) for items in summary['toast'].values())
        print(f"‡∏û‡∏ö {total} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô {len(summary['toast'])} ‡πÑ‡∏ü‡∏•‡πå")
        print(f"  ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ Toast: {', '.join(list(summary['toast'].keys())[:5])}...")
    else:
        print("  ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")

    print("\n" + "="*80)
    print("üìã ‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥")
    print("="*80)

    print("""
üéØ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÅ‡∏ö‡∏ö:

1. Toast (üçû) - ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö:
   ‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô (‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à, ‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à)
   ‚úÖ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ interaction
   ‚úÖ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡πâ‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡πÄ‡∏≠‡∏á

2. Modal (ü™ü) - ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö:
   ‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
   ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
   ‚úÖ ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

3. Alert/Confirm (üîî‚ùì) - ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏•‡∏¥‡∏Å‡πÉ‡∏ä‡πâ:
   ‚ùå UI ‡πÑ‡∏°‡πà‡∏™‡∏ß‡∏¢ ‡∏•‡πâ‡∏≤‡∏™‡∏°‡∏±‡∏¢
   ‚ùå ‡∏ö‡∏•‡πá‡∏≠‡∏Ñ browser ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
   ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á style ‡πÑ‡∏î‡πâ

üí° ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà alert() ‡πÅ‡∏•‡∏∞ confirm() ‡∏î‡πâ‡∏ß‡∏¢ Toast ‡∏´‡∏£‡∏∑‡∏≠ Modal
    """)

    # ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ
    if summary['alert']:
        print("\n‚ö†Ô∏è  ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç (‡πÉ‡∏ä‡πâ alert ‡∏≠‡∏¢‡∏π‡πà):")
        for file in sorted(summary['alert'].keys())[:10]:
            print(f"   - {file}")

if __name__ == '__main__':
    main()
