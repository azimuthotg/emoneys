#!/usr/bin/env python
"""
Script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏ö‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏•‡πà‡∏°‡πÉ‡∏ô DocumentVolume
"""
import os
import django
import sys

# ‡πÄ‡∏û‡∏¥‡πà‡∏° project directory ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô Python path
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, BASE_DIR)

# Setup Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'edoc_system.settings')
django.setup()

from accounts.models import Receipt, DocumentVolume, Department
from utils.fiscal_year import get_current_fiscal_year

def main():
    print("="*80)
    print("‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏ö‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡πà‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£")
    print("="*80)
    print()

    current_fy = get_current_fiscal_year()
    print(f"‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {current_fy}\n")

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏•‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    volumes = DocumentVolume.objects.filter(fiscal_year=current_fy).select_related('department')
    print(f"üìö ‡πÄ‡∏•‡πà‡∏°‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ({volumes.count()} ‡πÄ‡∏•‡πà‡∏°):")
    print("-" * 80)
    for vol in volumes:
        print(f"  ‚úÖ {vol.volume_code} - {vol.department.name} ({vol.department.code})")
        print(f"     ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: {vol.last_document_number}/{vol.max_documents}")

    print()

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏ö‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    receipts = Receipt.objects.filter(status='completed').select_related('department').order_by('-created_at')[:20]

    print(f"üìÑ ‡πÉ‡∏ö‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î ({receipts.count()} ‡πÉ‡∏ö):")
    print("-" * 80)

    departments_with_receipts = set()
    for receipt in receipts:
        dept = receipt.department
        departments_with_receipts.add(dept.code)

        # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÄ‡∏•‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        volume_exists = DocumentVolume.objects.filter(
            department=dept,
            fiscal_year=current_fy
        ).exists()

        status = "‚úÖ" if volume_exists else "‚ùå"
        print(f"  {status} {receipt.receipt_number} - {dept.name} ({dept.code})")
        print(f"     ‡πÄ‡∏•‡πà‡∏°‡∏ó‡∏µ‡πà: {receipt.volume_code} - ‡∏°‡∏µ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö: {'‡πÉ‡∏ä‡πà' if volume_exists else '‡πÑ‡∏°‡πà'}")

    print()
    print("="*80)
    print("‡∏™‡∏£‡∏∏‡∏õ")
    print("="*80)

    # ‡∏´‡∏≤‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ö‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏•‡πà‡∏°
    departments_with_volumes = set(volumes.values_list('department__code', flat=True))
    departments_missing_volumes = departments_with_receipts - departments_with_volumes

    if departments_missing_volumes:
        print(f"\n‚ö†Ô∏è  ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ö‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏•‡πà‡∏° ({len(departments_missing_volumes)} ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô):")
        for dept_code in departments_missing_volumes:
            try:
                dept = Department.objects.get(code=dept_code)
                receipt_count = Receipt.objects.filter(
                    department=dept,
                    status='completed'
                ).count()
                print(f"  ‚ùå {dept.name} ({dept_code}) - ‡∏°‡∏µ {receipt_count} ‡πÉ‡∏ö‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç")
            except Department.DoesNotExist:
                print(f"  ‚ùå {dept_code} - ‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠")

        print("\nüí° ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ:")
        print("  1. ‡∏£‡∏±‡∏ô fix_missing_volumes.py ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏•‡πà‡∏°‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î")
        print("  2. ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏•‡πà‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡πÉ‡∏ö‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏´‡∏°‡πà")
    else:
        print("\n‚úÖ ‡∏ó‡∏∏‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ö‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏µ‡πÄ‡∏•‡πà‡∏°‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß")

    print("="*80)

if __name__ == '__main__':
    try:
        main()
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
